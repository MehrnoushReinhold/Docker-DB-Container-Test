version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    ports:
      - "1433:1433"
    environment:
      - SA_PASSWORD=Your_password123
      - ACCEPT_EULA=Y
    networks:
      - weatherforecast-network
    volumes:
      - ./DockerDbContainer.API/Docker/Bash/entrypoint.sh:/entrypoint.sh  # Mount the entry point script
      - ./DockerDbContainer.API/Docker/Bash/waitforsqlserverandcreatedb.sh:/waitforsqlserverandcreatedb.sh  # Mount the database scripts
      - ./DockerDbContainer.Infrastructure.Database\sql:/sql  # Mount the database scripts
    entrypoint: ["/bin/bash", "/entrypoint.sh"]
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S host.docker.internal,1433 -U sa -P Your_password123 -Q 'SELECT 1' -C"]
      interval: 10s
      timeout: 5s
      retries: 5

  weatherforecast.api:
    image: ${DOCKER_REGISTRY-}weatherforecastapi
    container_name: weatherforecast.api
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=WeatherForecast;User Id=sa;Password=Your_password123;TrustServerCertificate=True;
    ports:
      - "6000:8080"
      - "6001:8081"
    networks:
      - weatherforecast-network
    build:
      context: ./DockerDbContainer.API
      dockerfile: Dockerfile

networks:
  weatherforecast-network:
    driver: bridge



